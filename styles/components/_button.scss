@use "sass:selector";

@mixin button-color($bg-color, $border-color, $text-color) {
  background-color: $bg-color;

  @if $text-color {
    color: $text-color;
  }

  &::after {
    border-color: $border-color;
  }
}

@mixin button-variant(
  $bg-color,
  $border-color,
  $text-color,
  $active-bg-color,
  $active-border-color,
  $activeTextColor: $text-color
) {
  @include button-color($bg-color, $border-color, $text-color);

  &:not(:disabled) {
    &:active,
    &.active {
      @include button-color(
        $active-bg-color,
        $active-border-color,
        $activeTextColor
      );
    }

    @media (hover: hover) {
      &:hover:not(.no-hover) {
        @include button-color(
          $active-bg-color,
          $active-border-color,
          $activeTextColor
        );
      }
    }
  }
}

@mixin button-rounder($key, $size) {
  &#{selector-append(&, '-rounder-#{$key}')} {
    border-radius: $size;

    &::after {
      border-radius: $size;
    }
  }
}

.button {
  @apply shadow-02 inline-flex items-center justify-center outline-none transition;

  min-height: 48px;

  &::after {
    @apply pointer-events-none absolute inset-0 border border-transparent transition;
  }

  /* VARIANT */
  &.primary {
    @include button-variant(
      theme("colors.primary.500"),
      theme("colors.primary.500"),
      theme("colors.white"),
      theme("colors.primary.500 / 75%"),
      theme("colors.primary.500 / 75%"),
      theme("colors.white")
    );

    &.button-outline {
      @include button-variant(
        theme("colors.white / 0%"),
        theme("colors.primary.500"),
        theme("colors.primary.500"),
        theme("colors.primary.500"),
        theme("colors.primary.500"),
        theme("colors.white")
      );
    }

    &.button-invert {
      @include button-variant(
        theme("colors.primary.500 / 10%"),
        theme("colors.primary.500 / 0%"),
        theme("colors.primary.500"),
        theme("colors.primary.500"),
        theme("colors.primary.500"),
        theme("colors.white")
      );
    }
  }

  &.milk-pink {
    @include button-variant(
      theme("colors.milkPink.500"),
      theme("colors.milkPink.500"),
      theme("colors.black"),
      theme("colors.milkPink.500 / 75%"),
      theme("colors.milkPink.500 / 75%")
    );
  }

  &.success {
    @include button-variant(
      theme("colors.success.500"),
      theme("colors.success.500"),
      theme("colors.black"),
      theme("colors.success.500 / 75%"),
      theme("colors.success.500 / 75%")
    );

    &.button-outline {
      @include button-variant(
        theme("colors.white / 0%"),
        theme("colors.success.500"),
        theme("colors.black"),
        theme("colors.success.500"),
        theme("colors.white")
      );
    }

    &.button-invert {
      @include button-variant(
        theme("colors.success.500 / 10%"),
        theme("colors.success.500 / 0%"),
        theme("colors.black"),
        theme("colors.success.500"),
        theme("colors.success.500"),
        theme("colors.white")
      );
    }
  }

  &.danger {
    @include button-variant(
      theme("colors.danger.500"),
      theme("colors.danger.500"),
      theme("colors.black"),
      theme("colors.danger.500 / 75%"),
      theme("colors.danger.500 / 75%")
    );

    &.button-outline {
      @include button-variant(
        theme("colors.white / 0%"),
        theme("colors.danger.500"),
        theme("colors.black"),
        theme("colors.danger.500"),
        theme("colors.white")
      );
    }

    &.button-invert {
      @include button-variant(
        theme("colors.danger.500 / 10%"),
        theme("colors.danger.500 / 0%"),
        theme("colors.black"),
        theme("colors.danger.500"),
        theme("colors.danger.500"),
        theme("colors.white")
      );
    }
  }

  &.warn {
    @include button-variant(
      theme("colors.warn.500"),
      theme("colors.warn.500"),
      theme("colors.black"),
      theme("colors.warn.500 / 75%"),
      theme("colors.warn.500 / 75%")
    );

    &.button-outline {
      @include button-variant(
        theme("colors.white / 0%"),
        theme("colors.warn.500"),
        theme("colors.black"),
        theme("colors.warn.500"),
        theme("colors.white")
      );
    }

    &.button-invert {
      @include button-variant(
        theme("colors.warn.500 / 10%"),
        theme("colors.warn.500 / 0%"),
        theme("colors.black"),
        theme("colors.warn.500"),
        theme("colors.warn.500"),
        theme("colors.white")
      );
    }
  }

  /* ROUDER */
  @include button-rounder("default", theme("spacing.1"));
  @include button-rounder("sm", theme("spacing[0.5]"));
  @include button-rounder("lg", theme("spacing[2]"));
  @include button-rounder("xl", theme("spacing[3]"));
  @include button-rounder("2xl", theme("spacing[4]"));
  @include button-rounder("3xl", theme("spacing[6]"));
  @include button-rounder("full", 9999px);
  @include button-rounder("none", 0px);

  /* DEFAULT */
  &.button-type-default {
    @apply px-6;
  }
}
